Auto generated by dump-hlir
This is the high level ir for DPL, why high level?
As you can see you can almost reconstruct the source from this.
If you meant to compile a dpl script use compile instead of dump-hlir
since this is not parsable and is just the output of pprint.pprint.

{'code': [[4, '__main__', 'io:println', ['"This is a program that prints."']],
          [6, '__main__', 'dump_vars', [':_meta']]],
 'frame': [{'_frame_stack': <Recursion on list with id=526143015488>,
            '_global': <Recursion on dict with id=526037066944>,
            '_local': <Recursion on dict with id=526037066944>,
            '_meta': {'_set_only_when_defined': 1,
                      'argc': 1,
                      'argv': ['/storage/emulated/0/dpl/example/switches.dpl'],
                      'debug': {'TC_DEFAULT_WHEN_NOT_FOUND': 1,
                                '_set_only_when_defined': 1,
                                'allow_automatic_global_name_resolution': 1,
                                'debug_output_file': 'debug_log.txt',
                                'disable_nil_values': 0,
                                'error_on_undefined_vars': 0,
                                'log_events': 0,
                                'show_imports': 0,
                                'show_scope_updates': 0,
                                'show_value_updates': 0,
                                'type_checker': 0,
                                'warn_no_return': 0,
                                'warn_undefined_vars': 1},
                      'dependencies': {'dpl': set(),
                                       'lua': set(),
                                       'python': {'/storage/emulated/0/dpl/lib/std/text_io.py'}},
                      'err': {1: 'PREPROCESSING_ERROR',
                              2: 'SYNTAX_ERROR',
                              3: 'RUNTIME_ERROR',
                              4: 'PYTHON_ERROR',
                              5: 'PANIC_ERROR',
                              6: 'IMPORT_ERROR',
                              7: 'THREAD_ERROR',
                              8: 'TYPE_ERROR',
                              9: 'NAME_ERROR',
                              10: 'COMPAT_ERROR',
                              11: 'FILE_NOT_FOUND_ERROR',
                              'COMPAT_ERROR': 10,
                              'FILE_NOT_FOUND_ERROR': 11,
                              'IMPORT_ERROR': 6,
                              'NAME_ERROR': 9,
                              'PANIC_ERROR': 5,
                              'PREPROCESSING_ERROR': 1,
                              'PYTHON_ERROR': 4,
                              'RUNTIME_ERROR': 3,
                              'SYNTAX_ERROR': 2,
                              'THREAD_ERROR': 7,
                              'TYPE_ERROR': 8,
                              'builtins': ('PREPROCESSING_ERROR',
                                           'SYNTAX_ERROR',
                                           'RUNTIME_ERROR',
                                           'PYTHON_ERROR',
                                           'PANIC_ERROR',
                                           'IMPORT_ERROR',
                                           'THREAD_ERROR',
                                           'TYPE_ERROR',
                                           'NAME_ERROR',
                                           'COMPAT_ERROR',
                                           'FILE_NOT_FOUND_ERROR'),
                              'defined_errors': ['PREPROCESSING_ERROR',
                                                 'SYNTAX_ERROR',
                                                 'RUNTIME_ERROR',
                                                 'PYTHON_ERROR',
                                                 'PANIC_ERROR',
                                                 'IMPORT_ERROR',
                                                 'THREAD_ERROR',
                                                 'TYPE_ERROR',
                                                 'NAME_ERROR',
                                                 'COMPAT_ERROR',
                                                 'FILE_NOT_FOUND_ERROR']},
                      'internal': {'GetEnv': <function getenv at 0x7a807d8e00>,
                                   'GetMemory': <function <lambda> at 0x7a7a407560>,
                                   'HasGetMemory': 0,
                                   'SetEnv': (<built-in function putenv>,),
                                   'SizeOf': <function get_size_of at 0x7a7a407600>,
                                   '_set_only_when_defined': 1,
                                   'get_lib_path': <function get_lib_path at 0x7a7fe62ca0>,
                                   'implementation': 'python',
                                   'main_file': '/storage/emulated/0/dpl/example/switches.dpl',
                                   'main_path': '/storage/emulated/0/dpl/example/',
                                   'os': {'architecture': '64bit',
                                          'executable_format': 'ELF',
                                          'information': 'Linux-4.19.191+-aarch64-with-libc',
                                          'linux': {'codename': 0,
                                                    'name': 0,
                                                    'version': 0},
                                          'machine': 'aarch64',
                                          'os_name': 'linux',
                                          'processor': <none>,
                                          'threads': 8,
                                          'uname': uname_result(system='Linux', node='localhost', release='4.19.191+', version='#1 SMP PREEMPT Mon Jan 20 11:12:50 CST 2025', machine='aarch64')},
                                   'pid': 14067,
                                   'python_version': 'sys.version_info(major=3, '
                                                     'minor=13, micro=2, '
                                                     "releaselevel='final', "
                                                     'serial=0)',
                                   'python_version_string': '3.13.2 (main, Apr '
                                                            '27 2025, '
                                                            '04:34:27) [GCC '
                                                            '11.4.0]',
                                   'raw_version': (1, 4, 8),
                                   'set_lib_path': <function set_lib_path at 0x7a7fe62b60>,
                                   'version': v1.4.8},
                      'interpreter_flags': set(),
                      'interpreter_vflags': {},
                      'original_argv': ['../dpl.py',
                                        'dump-hlir',
                                        '/storage/emulated/0/dpl/example/switches.dpl'],
                      'preprocessing_flags': {'DEAD_CODE_OPT': 1,
                                              'EXPRESSION_FOLDING': 1,
                                              'IGNORE_EMPTY_FUNCTIONS': 0,
                                              'RUNTIME_ERRORS': 1,
                                              'STRICT': 0,
                                              'WARNINGS': 1,
                                              '_set_only_when_defined': 1},
                      'type_signatures': {'': (True, [<class 'str'>, '...']),
                                          'DEFINE_ERROR[1]': (False,
                                                              [<class 'str'>]),
                                          'DEFINE_ERROR[2]': (False,
                                                              [<class 'str'>,
                                                               <class 'int'>]),
                                          'LOG_TIME': (False, [<class 'str'>]),
                                          'LOG_TIME[0]': (False, []),
                                          'START_TIME': (False, []),
                                          'STOP_TIME': (False, []),
                                          '_intern.jump[2]': (False,
                                                              [<class 'int'>,
                                                               typing.Any]),
                                          '_intern.jump[int]': (False, []),
                                          '_intern.switch': (False,
                                                             [<class 'dict'>,
                                                              typing.Any]),
                                          'body': (True,
                                                   [<class 'str'>, '...']),
                                          'catch': (True,
                                                    [<class 'list'>,
                                                     <class 'str'>,
                                                     typing.Any,
                                                     '...']),
                                          'ccall': (True, [typing.Any, '...']),
                                          'ccatch': (True,
                                                     [<class 'str'>,
                                                      typing.Any,
                                                      '...']),
                                          'cdef': (False, [<class 'str'>]),
                                          'cmd': (False, [<class 'str'>]),
                                          'cmd[2]': (False,
                                                     [<class 'str'>,
                                                      <class 'str'>]),
                                          'dlclose': (False, [typing.Any]),
                                          'dlopen': (False,
                                                     [<class 'str'>,
                                                      <class 'str'>]),
                                          'dump_scope': (False, []),
                                          'dump_vars': (False,
                                                        [<class 'dict'>]),
                                          'enum': (False, [<class 'str'>]),
                                          'exec': (False,
                                                   [str | list,
                                                    <class 'str'>,
                                                    <class 'list'>]),
                                          'exit': (False, [<class 'int'>]),
                                          'exit[0]': (False, []),
                                          'export': (False,
                                                     ['set',
                                                      <class 'str'>,
                                                      '=',
                                                      typing.Any]),
                                          'fallthrough': (False, []),
                                          'fn': (False,
                                                 [<class 'str'>,
                                                  (<class 'list'>,
                                                   <class 'tuple'>)]),
                                          'for': (False,
                                                  [<class 'str'>,
                                                   'in',
                                                   str | list | tuple | set | dict | range]),
                                          'freturn': (True,
                                                      [typing.Any, '...']),
                                          'from_template': (False,
                                                            [<class 'dict'>]),
                                          'getc': (False,
                                                   [<class 'str'>, typing.Any]),
                                          'help': (False, [typing.Any]),
                                          'if': (False, [typing.Any]),
                                          'ifmain': (False, []),
                                          'io:flush': (False, []),
                                          'io:input[str,str]': (False, []),
                                          'io:input[str]': (False, []),
                                          'io:print': (True,
                                                       [typing.Any, '...']),
                                          'io:println': (True,
                                                         [typing.Any, '...']),
                                          'io:rawoutput': (True,
                                                           [typing.Any, '...']),
                                          'io:rawprint': (True,
                                                          [typing.Any, '...']),
                                          'io:rawprintln': (True,
                                                            [typing.Any,
                                                             '...']),
                                          'io:setoutputfile': (False,
                                                               [<class '_io.TextIOWrapper'>]),
                                          'loop': (False, [<class 'int'>]),
                                          'loop[0]': (False, []),
                                          'match': (False, [typing.Any]),
                                          'mcatch': (True,
                                                     [<class 'list'>,
                                                      <class 'str'>,
                                                      typing.Any,
                                                      '...']),
                                          'method': (False,
                                                     [<class 'dict'>,
                                                      (<class 'list'>,
                                                       <class 'tuple'>),
                                                      'list|tuple']),
                                          'module': (False, [<class 'str'>]),
                                          'new': (False,
                                                  [<class 'dict'>,
                                                   <class 'str'>]),
                                          'object': (False, [<class 'str'>]),
                                          'pass': (True, [typing.Any, '...']),
                                          'pub': (False,
                                                  ['fn',
                                                   (<class 'list'>,
                                                    <class 'tuple'>),
                                                   'list|tuple']),
                                          'pycatch': (True,
                                                      [<class 'list'>,
                                                       <class 'str'>,
                                                       typing.Any,
                                                       '...']),
                                          'raise': (False, [<class 'int'>]),
                                          'raise[2]': (False,
                                                       [<class 'int'>,
                                                        <class 'str'>]),
                                          'return': (True, [typing.Any, '...']),
                                          'safe': (True,
                                                   [<class 'str'>,
                                                    typing.Any,
                                                    '...']),
                                          'scatch': (True,
                                                     [<class 'list'>,
                                                      <class 'str'>,
                                                      typing.Any,
                                                      '...']),
                                          'sched[float]': (False,
                                                           [<class 'float'>]),
                                          'sched[int]': (False,
                                                         [<class 'int'>]),
                                          'set': (False,
                                                  [<class 'str'>,
                                                   '=',
                                                   typing.Any]),
                                          'sexec': (False,
                                                    [<class 'str'>,
                                                     str | list,
                                                     <class 'str'>,
                                                     <class 'list'>]),
                                          'skip': (False, []),
                                          'smcatch': (True,
                                                      [<class 'list'>,
                                                       <class 'str'>,
                                                       typing.Any,
                                                       '...']),
                                          'stop': (False, []),
                                          'tc_register': (False,
                                                          [<class 'str'>]),
                                          'template': (False, [<class 'str'>]),
                                          'while': (False, [typing.Any])}},
            '_nonlocal': <Recursion on dict with id=526037066944>,
            'io:flush': <function flush at 0x7a7a424360>,
            'io:input': <function myInput at 0x7a7a424180>,
            'io:print': <function myPrint at 0x7a7a407ec0>,
            'io:println': <function println at 0x7a7a407f60>,
            'io:rawoutput': <function rawoutput at 0x7a7a4242c0>,
            'io:rawprint': <function rawprint at 0x7a7a424040>,
            'io:rawprintln': <function rawprintln at 0x7a7a4240e0>,
            'io:setoutputfile': <function setoutputfile at 0x7a7a424220>}]}