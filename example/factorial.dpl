# DEPENDS ON DEVICE
# AND MUSNT BE TAKEN AT FACE VALUE

&use {std/text_io.py}

fn memoize_fact n
    if [:n <= 1]
        return 1
    end
    mcatch [f] _global.memoize_fact [:n - 1]
    return [:n * :f]
end

fn fact n
    if [:n <= 1]
        return 1
    end
    catch [f] _global.fact [:n - 1]
    return [:n * :f]
end

io:println "Factorial Program\n"

START_TIME
mcatch [this] memoize_fact 28000
STOP_TIME
LOG_TIME "With memoization"

START_TIME
catch [this] fact 28000
STOP_TIME
LOG_TIME "Without"

io:println "\nSecond Pass\n"

START_TIME
# to make sure it has a cache miss when doing 28001
mcatch [this] memoize_fact 28001
STOP_TIME
LOG_TIME "With memoization"

START_TIME
catch [this] fact 28000
STOP_TIME
LOG_TIME "Without"