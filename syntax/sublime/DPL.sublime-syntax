%YAML 1.2
---
name: "DPL"
file_extensions:
  - 'dpl'
scope: source.dpl
contexts:
  main:

    - match: '^\s*\b((:?proto-)?body|expect-then|wait_for_threads|then|match|case|with|fallthrough|default|if|loops|expect|module|thread|import|while|return|loop|for|end|pass|fn|method|stop|skip|else)\b'
      scope: keyword.control.dpl

    - match: '^\s*?#' # this is intentional as comments can only stay on separate lines
      scope: comment.line.dpl
      push: line_comment

    - match: '^\s*\b(cmd|help|del|const|fset|new|cmd|set|object|exit|pycatch|catch|START_TIME|STOP_TIME|LOG_TIME)\b'
      scope: support.function

    - match: '\b(Sum|Range|RawRange|dRawRange|dRange|Index|ToFloat|ToStr|ToInt|Append|Pop)\b'
      scope: constant.numeric

    - match: '\b(in|as)\b'
      scope: keyword.operator.dpl

    - match: '&(include|enable|disable|as)'
      scope: keyword.operator.dpl

    - match: "=="
      scope: keyword.operator.dpl

    - match: "!="
      scope: keyword.operator.dpl

    - match: "<="
      scope: keyword.operator.dpl

    - match: ">="
      scope: keyword.operator.dpl

    - match: ">"
      scope: keyword.operator.dpl

    - match: "<"
      scope: keyword.operator.dpl

    - match: '\b(true|false|nil|none)\b'
      scope: constant.language
      pop: true

    - match: '-?[\d,]+(?:\.\d+)?'
      scope: constant.numeric
      pop: true

    - match: '"'
      scope: punctuation.definition.string.start.dpl
      push: double_quoted_string

    - match: "'"
      scope: punctuation.definition.string.start.dpl
      push: single_quoted_string

    - match: '\{[^}]+\}'
      scope: string.quoted.double

    - match: '(\%|:)[^\s\(\)\[\]]+'
      scope: keyword.operator.dpl

    - match: '^\s*\S+'
      scope: keyword.operator.dpl

    - match: '(name\{[^\s]+\}|[\w\.]+)'
      scope: string.quoted

  double_quoted_string:
    - meta_scope: string.quoted.double.dpl
    - match: '\\\[.*?\]'
      scope: constant.character.escape.dpl
    - match: '\\.'
      scope: constant.character.escape.dpl
    - match: '"'
      scope: punctuation.definition.string.end.dpl
      pop: true

  single_quoted_string:
    - meta_scope: string.quoted.double.dpl
    - match: '\\\[.*?\]'
      scope: constant.character.escape.dpl
    - match: '\\.'
      scope: constant.character.escape.dpl
    - match: '\$\{(.*)\}'
      scope: keyword.operator.dpl
    - match: "'"
      scope: punctuation.definition.string.end.dpl
      pop: true

  line_comment:
    - meta_scope: comment.line.dpl
    - match: $  # End of line comment
      pop: true
